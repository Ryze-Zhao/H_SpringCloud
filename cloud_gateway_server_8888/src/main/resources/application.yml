server:
  port: 8888

spring:
  application:
    name: cloud-gateway-service
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true #开启从注册中心动态创建路由的功能，利用微服务名进行路由
      routes:
        - id: payment_routh #payment_route    #路由的ID，没有固定规则但要求唯一，建议配合服务名
          #uri: http://localhost:8001         #匹配后提供服务的路由地址，只能是服务提供者单机才可以，但是我们是集群，就没办法ribbon负载均衡了，需要使用下面的
          uri: lb://cloud-payment-service     #匹配后提供服务的路由地址，只要挂到Eureka的服务提供者集群都可以负载均衡，同名即可
          predicates:
             - Path=/cloud/pay/payment/**                                # 断言，路径相匹配的进行路由，需要参考服务的Controller
#             - After=2020-05-29T20:11:34.507+08:00[Asia/Shanghai]        #断言，必须在这个时间点后，才可以访问
#             - Before=2020-05-29T21:11:34.507+08:00[Asia/Shanghai]       #断言，必须在这个时间点前，才可以访问
#             - Between=2020-05-29T20:11:34.507+08:00[Asia/Shanghai],2020-05-29T21:11:34.507+08:00[Asia/Shanghai] #断言，必须在这两个个时间点之间，才可以访问
#             - Cookie=username,zhao                                      #断言：必须带Cookie，key为username，value为zhao，才可以通过（value也可以写正则表达式）
             - Header=X-Request-Id, \d+                                  #断言：必须带Header，请求头要有X-Request-Id属性并且值为整数的正则表达式（参考Cookie）





        - id: payment_routh2 #payment_route    #路由的ID，没有固定规则但要求唯一，建议配合服务名
          #uri: http://localhost:8001          #匹配后提供服务的路由地址，只能是服务提供者单机才可以，但是我们是集群，就没办法ribbon负载均衡了，需要使用下面的
          uri: lb://cloud-payment-service #匹配后提供服务的路由地址，只要挂到Eureka的服务提供者集群都可以负载均衡，同名即可
          predicates:
            - Path=/cloud/pay/payment/lb/**         # 断言，路径相匹配的进行路由，需要参考服务的Controller

eureka:
  instance:
    hostname: cloud-gateway-service
  client: #服务提供者provider注册进eureka服务列表内
    service-url:
      register-with-eureka: true
      fetch-registry: true
      defaultZone: http://eureka7001.com:7001/eureka


